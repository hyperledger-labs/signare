// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra

import (
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

type ModuleSpec struct {
	Configuration *ModuleSpecConfiguration `json:"configuration"`
	// Description of the resource.
	Description *string `json:"description"`
}

// ValidateWith check whether ModuleSpec is valid
func (data ModuleSpec) ValidateWith() (*httpinfra.ValidationResult, *httpinfra.HTTPError) {
	if data.Configuration != nil {
		validatedConfiguration, errConfiguration := data.Configuration.ValidateWith()
		if errConfiguration != nil {
			httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
			httpError.SetMessage("error validating field [configuration]")
			return nil, httpError
		}
		if validatedConfiguration != nil && !validatedConfiguration.Valid {
			return validatedConfiguration, nil
		}
	}
	if data.Description == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [description]")
		return nil, httpError
	}
	return &httpinfra.ValidationResult{
		Valid: true,
	}, nil
}

// SetDefaults sets default values as defined in the API spec
func (data *ModuleSpec) SetDefaults() {
	data.Configuration.SetDefaults()
}
