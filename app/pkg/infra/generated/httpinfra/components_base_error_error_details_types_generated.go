// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra

import (
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

type BaseErrorErrorDetails struct {
	// The id of the error. Check the error catalogue.
	ErrorId *int32 `json:"errorId"`
	// Human readable description of the error.
	Message *string `json:"message"`
	// Unique Error Identifier that can be used to track the error.
	TraceableErrorId *string `json:"traceableErrorId"`
}

// ValidateWith check whether BaseErrorErrorDetails is valid
func (data BaseErrorErrorDetails) ValidateWith() (*httpinfra.ValidationResult, *httpinfra.HTTPError) {
	if data.ErrorId == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [errorId]")
		return nil, httpError
	}
	if data.Message == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [message]")
		return nil, httpError
	}
	if data.TraceableErrorId == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [traceableErrorId]")
		return nil, httpError
	}
	return &httpinfra.ValidationResult{
		Valid: true,
	}, nil
}

// SetDefaults sets default values as defined in the API spec
func (data *BaseErrorErrorDetails) SetDefaults() {
}
