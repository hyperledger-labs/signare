// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra

import (
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

// ResourceMetaUpdate - Meta information of the resource
type ResourceMetaUpdate struct {
	// An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients
	ResourceVersion *string `json:"resourceVersion"`
}

// ValidateWith check whether ResourceMetaUpdate is valid
func (data ResourceMetaUpdate) ValidateWith() (*httpinfra.ValidationResult, *httpinfra.HTTPError) {
	if data.ResourceVersion == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [resourceVersion]")
		return nil, httpError
	}
	return &httpinfra.ValidationResult{
		Valid: true,
	}, nil
}

// SetDefaults sets default values as defined in the API spec
func (data *ResourceMetaUpdate) SetDefaults() {
}
