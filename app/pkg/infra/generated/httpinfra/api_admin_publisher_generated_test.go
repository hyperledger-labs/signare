// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra_test

import (
	"testing"

	"github.com/stretchr/testify/require"

	generatedHTTPInfra "github.com/hyperledger-labs/signare/app/pkg/infra/generated/httpinfra"
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

// Test_PublishAdminApplicationsCreate_Success test the PublishAdminApplicationsCreate happy path
func Test_PublishAdminApplicationsCreate_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminApplicationsCreate(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminApplicationsDescribe_Success test the PublishAdminApplicationsDescribe happy path
func Test_PublishAdminApplicationsDescribe_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminApplicationsDescribe(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminApplicationsEdit_Success test the PublishAdminApplicationsEdit happy path
func Test_PublishAdminApplicationsEdit_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminApplicationsEdit(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminApplicationsList_Success test the PublishAdminApplicationsList happy path
func Test_PublishAdminApplicationsList_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminApplicationsList(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminApplicationsRemove_Success test the PublishAdminApplicationsRemove happy path
func Test_PublishAdminApplicationsRemove_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminApplicationsRemove(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminModulesCreate_Success test the PublishAdminModulesCreate happy path
func Test_PublishAdminModulesCreate_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminModulesCreate(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminModulesDescribe_Success test the PublishAdminModulesDescribe happy path
func Test_PublishAdminModulesDescribe_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminModulesDescribe(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminModulesEdit_Success test the PublishAdminModulesEdit happy path
func Test_PublishAdminModulesEdit_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminModulesEdit(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminModulesList_Success test the PublishAdminModulesList happy path
func Test_PublishAdminModulesList_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminModulesList(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminModulesRemove_Success test the PublishAdminModulesRemove happy path
func Test_PublishAdminModulesRemove_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminModulesRemove(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminSlotsCreate_Success test the PublishAdminSlotsCreate happy path
func Test_PublishAdminSlotsCreate_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminSlotsCreate(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminSlotsDescribe_Success test the PublishAdminSlotsDescribe happy path
func Test_PublishAdminSlotsDescribe_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminSlotsDescribe(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminSlotsList_Success test the PublishAdminSlotsList happy path
func Test_PublishAdminSlotsList_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminSlotsList(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminSlotsRemove_Success test the PublishAdminSlotsRemove happy path
func Test_PublishAdminSlotsRemove_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminSlotsRemove(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminSlotsUpdatePin_Success test the PublishAdminSlotsUpdatePin happy path
func Test_PublishAdminSlotsUpdatePin_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminSlotsUpdatePin(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminUsersCreate_Success test the PublishAdminUsersCreate happy path
func Test_PublishAdminUsersCreate_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminUsersCreate(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminUsersDescribe_Success test the PublishAdminUsersDescribe happy path
func Test_PublishAdminUsersDescribe_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminUsersDescribe(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminUsersEdit_Success test the PublishAdminUsersEdit happy path
func Test_PublishAdminUsersEdit_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminUsersEdit(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminUsersList_Success test the PublishAdminUsersList happy path
func Test_PublishAdminUsersList_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminUsersList(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}

// Test_PublishAdminUsersRemove_Success test the PublishAdminUsersRemove happy path
func Test_PublishAdminUsersRemove_Success(t *testing.T) {
	http := httpinfra.ProvideHTTPRouter()
	err := generatedHTTPInfra.PublishAdminUsersRemove(http, generatedHTTPInfra.DefaultAdminAPIHTTPHandler{})
	require.Nil(t, err)
}
