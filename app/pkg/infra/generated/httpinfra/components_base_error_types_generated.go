// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra

import (
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

type BaseError struct {
	Error *BaseErrorError `json:"error"`
}

// ValidateWith check whether BaseError is valid
func (data BaseError) ValidateWith() (*httpinfra.ValidationResult, *httpinfra.HTTPError) {
	if data.Error == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [error]")
		return nil, httpError
	}
	validatedError, errError := data.Error.ValidateWith()
	if errError != nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [error]")
		return nil, httpError
	}
	if validatedError != nil && !validatedError.Valid {
		return validatedError, nil
	}
	return &httpinfra.ValidationResult{
		Valid: true,
	}, nil
}

// SetDefaults sets default values as defined in the API spec
func (data *BaseError) SetDefaults() {
	data.Error.SetDefaults()
}
