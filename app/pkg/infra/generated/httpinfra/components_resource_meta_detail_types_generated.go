// Code generated by Signare OpenAPI generator. DO NOT EDIT

package httpinfra

import (
	"github.com/hyperledger-labs/signare/app/pkg/infra/httpinfra"
)

// ResourceMetaDetail - Metainformation of the resource
type ResourceMetaDetail struct {
	// The unique identifier of the resource. It must be aligned with the value in the endpoint path.
	Id *string `json:"id"`
	// An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients
	ResourceVersion *string `json:"resourceVersion"`
	// Instant when the resource was registered in the signare. Read only Unix time in milliseconds UTC.
	CreationDate *string `json:"creationDate"`
	// Last instant when the resource was updated. Read only Unix time in milliseconds UTC.
	LastUpdate *string `json:"lastUpdate"`
}

// ValidateWith check whether ResourceMetaDetail is valid
func (data ResourceMetaDetail) ValidateWith() (*httpinfra.ValidationResult, *httpinfra.HTTPError) {
	if data.Id == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [id]")
		return nil, httpError
	}
	if data.ResourceVersion == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [resourceVersion]")
		return nil, httpError
	}
	if data.CreationDate == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [creationDate]")
		return nil, httpError
	}
	if data.LastUpdate == nil {
		httpError := httpinfra.NewHTTPError(httpinfra.StatusInvalidArgument)
		httpError.SetMessage("error validating field [lastUpdate]")
		return nil, httpError
	}
	return &httpinfra.ValidationResult{
		Valid: true,
	}, nil
}

// SetDefaults sets default values as defined in the API spec
func (data *ResourceMetaDetail) SetDefaults() {
}
